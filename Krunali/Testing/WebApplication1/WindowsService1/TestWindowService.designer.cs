#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsService1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Collage Master")]
	public partial class TestWindowServiceDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStudent_Master(Student_Master instance);
    partial void UpdateStudent_Master(Student_Master instance);
    partial void DeleteStudent_Master(Student_Master instance);
    #endregion
		
		public TestWindowServiceDataContext() : 
				base(global::WindowsService1.Properties.Settings.Default.Collage_MasterConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TestWindowServiceDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestWindowServiceDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestWindowServiceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestWindowServiceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Student_Master> Student_Masters
		{
			get
			{
				return this.GetTable<Student_Master>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StudentMasterGetActive")]
		public ISingleResult<Student_Master> StudentMasterGetActive([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> in_statusFlage)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), in_statusFlage);
			return ((ISingleResult<Student_Master>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student_Master")]
	public partial class Student_Master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _StdID;
		
		private string _StdName;
		
		private System.Nullable<decimal> _StdContactNo;
		
		private bool _statusFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStdIDChanging(decimal value);
    partial void OnStdIDChanged();
    partial void OnStdNameChanging(string value);
    partial void OnStdNameChanged();
    partial void OnStdContactNoChanging(System.Nullable<decimal> value);
    partial void OnStdContactNoChanged();
    partial void OnstatusFlagChanging(bool value);
    partial void OnstatusFlagChanged();
    #endregion
		
		public Student_Master()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StdID", AutoSync=AutoSync.OnInsert, DbType="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal StdID
		{
			get
			{
				return this._StdID;
			}
			set
			{
				if ((this._StdID != value))
				{
					this.OnStdIDChanging(value);
					this.SendPropertyChanging();
					this._StdID = value;
					this.SendPropertyChanged("StdID");
					this.OnStdIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StdName", DbType="VarChar(50)")]
		public string StdName
		{
			get
			{
				return this._StdName;
			}
			set
			{
				if ((this._StdName != value))
				{
					this.OnStdNameChanging(value);
					this.SendPropertyChanging();
					this._StdName = value;
					this.SendPropertyChanged("StdName");
					this.OnStdNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StdContactNo", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> StdContactNo
		{
			get
			{
				return this._StdContactNo;
			}
			set
			{
				if ((this._StdContactNo != value))
				{
					this.OnStdContactNoChanging(value);
					this.SendPropertyChanging();
					this._StdContactNo = value;
					this.SendPropertyChanged("StdContactNo");
					this.OnStdContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusFlag", DbType="Bit NOT NULL")]
		public bool statusFlag
		{
			get
			{
				return this._statusFlag;
			}
			set
			{
				if ((this._statusFlag != value))
				{
					this.OnstatusFlagChanging(value);
					this.SendPropertyChanging();
					this._statusFlag = value;
					this.SendPropertyChanged("statusFlag");
					this.OnstatusFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
